on:
    workflow_call:
        inputs:
            publish:
                type: boolean
                default: false
                required: false
                description: "Determine wether or not we want to publish the NPM package."

permissions:
    contents: read
    packages: write
    actions: read
    pull-requests: write

jobs:
    build-and-test:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v3
            -   name: Add HTTP basic auth credentials
                run: echo '${{ secrets.COMPOSER_AUTH_JSON }}' > $GITHUB_WORKSPACE/auth.json
            -   name: Install dependencies
                uses: php-actions/composer@v6
                with:
                    php_version: "8.0"
                    php_extensions: calendar
            -   name: Remove auth.json file
                run: rm -f $GITHUB_WORKSPACE/auth.json
            -   name: "Check file existence"
                uses: andstor/file-existence-action@v1
                id: check_files
                with:
                    files: "phpunit.xml.dist"
                    allow_failure: false
            -   name: Create coverage file
                run: mkdir -p coverage && touch coverage/text.txt
            -   name: PHPUnit Tests
                if: steps.check_files.outputs.files_exists == 'true'
                uses: php-actions/phpunit@v3
                env:
                    XDEBUG_MODE: coverage
                with:
                    php_extensions: xdebug calendar
                    bootstrap: vendor/autoload.php
                    configuration: phpunit.xml.dist
                    args: --coverage-text="coverage/text.txt" && echo "coverage=$(cat coverage/text.txt)" >> $GITHUB_ENV
                    php_version: "8.0"
            -   name: Comment in pull request
                if: steps.check_files.outputs.files_exists == 'true' && github.event_name == 'pull_request'
                uses: mshick/add-pr-comment@v1
                with:
                    message: ${{ env.coverage }}
                    repo-token: ${{ secrets.GITHUB_TOKEN }}
                    repo-token-user-login: 'github-actions[bot]' # The user.login for temporary GitHub tokens
                    allow-repeats: false # This is the default

    
    publish:
        if: inputs.publish
        needs: build-and-test
        runs-on: ubuntu-latest
        steps:
            -   name: Synchronize Repman
                uses: joelwmale/webhook-action@master
                with:
                    url: ${{ secrets.REPMAN_WEBHOOK }}
