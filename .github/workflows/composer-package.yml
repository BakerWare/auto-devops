on:
    workflow_call:
        inputs:
            publish:
                type: boolean
                default: false
                required: false
                description: "Determine wether or not we want to publish the NPM package."
            phpVersion:
                type: string
                required: false
                description: "Php version to be installed"

permissions:
    contents: read
    packages: write
    actions: read
    pull-requests: write

jobs:
    build-and-test:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v3
            -   name: Add HTTP basic auth credentials
                run: echo '${{ secrets.COMPOSER_AUTH_JSON }}' > $GITHUB_WORKSPACE/auth.json
            -   id: supported-versions-matrix
                uses: WyriHaximus/github-action-composer-php-versions-in-range@v1
            -   name: Install dependencies
                uses: php-actions/composer@v6
                with:
                    php_version: ${{ inputs.phpVersion || steps.supported-versions-matrix.outputs.lowest }}
                    php_extensions: calendar gd zip
            -   name: Remove auth.json file
                run: rm -f $GITHUB_WORKSPACE/auth.json
            -   name: "Check file existence"
                uses: andstor/file-existence-action@v1
                id: check_files
                with:
                    files: "phpunit.xml.dist"
                    allow_failure: false
            -   name: PHPUnit Tests
                if: steps.check_files.outputs.files_exists == 'true'
                run: composer test:coverage
            -   name: Coverage Report as Comment (Clover)
                if: steps.check_files.outputs.files_exists == 'true' && github.event_name == 'pull_request'
                uses: lucassabreu/comment-coverage-clover@main
                with:
                    file: output/code-coverage/clover.xml

    publish:
        if: inputs.publish
        needs: build-and-test
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v3
            -   name: Synchronize Repman
                uses: joelwmale/webhook-action@master
                with:
                    url: ${{ secrets.REPMAN_WEBHOOK }}
            -   name: get package name
                id: name
                uses: notiz-dev/github-action-json-property@release
                with:
                    path: 'composer.json'
                    prop_path: 'name'
            -   name: Slack Notification
                uses: rtCamp/action-slack-notify@v2
                env:
                    SLACK_CHANNEL: 'github'
                    SLACK_USERNAME: 'BerryBot'
                    SLACK_ICON: 'https://cdn-icons-png.flaticon.com/512/1514/1514967.png'
                    SLACK_FOOTER: "Run `composer update ${{steps.name.outputs.prop}}:latest` to update to this latest version"
                    SLACK_MESSAGE: "Published ${{github.ref_name}}"
                    SLACK_COLOR: 'good'
                    SLACK_TITLE: "Composer package ${{ steps.name.outputs.prop}} heeft een nieuwe versie"
                    SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

